version: "3.9"

services:

  db:
    image: postgres:14.1
    container_name: movie_postgres
    environment:
      - POSTGRES_DB=movie_recommendation_api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  django:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    container_name: movie_django
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static-data:/app/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq

  pgadmin:
    container_name: movie_pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 'pg_pass'
    ports:
      - "5050:80"

  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: movie_rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7
    container_name: movie_redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data


volumes:
    postgres-data:
    static-data:
    redis-data:
